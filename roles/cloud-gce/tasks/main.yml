- block:
    - name: Include prompts
      import_tasks: prompts.yml

    - name: Separate egress network configured
      gcp_compute_network:
        name: "algo-egress-{{ algo_server_name }}"
        auto_create_subnetworks: false
        ipv4_range: "10.0.0.0/16"
        project: "{{ project_id }}"
        auth_kind: serviceaccount
        service_account_file: "{{ credentials_file_path }}"
        scopes:
          - https://www.googleapis.com/auth/compute
      register: egress
      when: algo_separate_egress

    - name: Egress subnetwork configured
      gcp_compute_subnetwork:
        name: "algo-egress-{{ algo_server_name }}-subnet"
        network: "{{ egress }}"
        region: "{{ algo_region|regex_replace('-[^-]+$') }}"
        ip_cidr_range: "10.0.0.0/24"
        project: "{{ project_id }}"
        auth_kind: serviceaccount
        service_account_file: "{{ credentials_file_path }}"
        scopes:
          - https://www.googleapis.com/auth/compute
      register: egress_subnet
      when: algo_separate_egress

    - block:
      - name: External IP allocated
        gce_eip:
          service_account_email: "{{ service_account_email }}"
          credentials_file: "{{ credentials_file_path }}"
          project_id: "{{ project_id }}"
          name: "{{ algo_server_name }}"
          region: "{{ algo_region.split('-')[0:2] | join('-') }}"
          state: present
        register: gce_eip

    # Remove this when https://github.com/GoogleCloudPlatform/magic-modules/pull/339
    # is merged into algo.  Until then, the library thinks the instance's nat_ip is a
    # required field, which compels us to set up a persistent external IP address for algo.
    - name: "Network address allocated{{ ' (ingress)' if algo_separate_egress else ''}}"
      gcp_compute_address:
        name: "algo-address-{{ algo_server_name }}"
        region: "{{ algo_region|regex_replace('-[^-]+$') }}"
        project: "{{ project_id }}"
        auth_kind: serviceaccount
        service_account_file: "{{ credentials_file_path }}"
        scopes:
          - https://www.googleapis.com/auth/compute
      register: address

    - name: Network address allocated (egress)
      gcp_compute_address:
        name: "algo-address-{{ algo_server_name }}-egress"
        region: "{{ algo_region|regex_replace('-[^-]+$') }}"
        project: "{{ project_id }}"
        auth_kind: serviceaccount
        service_account_file: "{{ credentials_file_path }}"
        scopes:
          - https://www.googleapis.com/auth/compute
      register: egress_address
      when: algo_separate_egress

    - set_fact:
        gce_nic0:
          - access_configs:
            - name: "{{ 'Ingress NAT' if algo_separate_egress else 'External NAT'}}"
              type: ONE_TO_ONE_NAT
              nat_ip: "{{ address }}"

    - set_fact:
        gce_nic1:
          - access_configs:
            - name: "Egress NAT"
              type: ONE_TO_ONE_NAT
              nat_ip: "{{ egress_address }}"
            network: "{{ egress }}"
            subnetwork: "{{ egress_subnet }}"
        when: algo_separate_egress

    - set_fact:
        gce_nics: "{{ gce_nic0 + gce_nic1 }}"
        when: algo_separate_egress

    - set_fact:
        gce_nics: "{{ gce_nic0 }}"
        when: not algo_separate_egress

    - name: Boot disk allocated
      gcp_compute_disk:
        name: "algo-disk-{{ algo_server_name }}"
        size_gb: 10
        source_image: "{{ cloud_providers.gce.image }}"
        zone: "{{ algo_region }}"
        project: "{{ project_id }}"
        auth_kind: serviceaccount
        service_account_file: "{{ credentials_file_path }}"
        scopes:
          - https://www.googleapis.com/auth/compute
      register: disk

    - name: "Creating a new instance..."
      gce:
        instance_names: "{{ algo_server_name }}"
        zone: "{{ algo_region }}"
        external_ip: "{{ external_ip | default('ephemeral') }}"
        machine_type: "{{ cloud_providers.gce.size }}"
        disks:
          - auto_delete: true
            boot: true
            source: "{{ disk }}"
        auth_kind: serviceaccount
        service_account_file: "{{ credentials_file_path }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        project: "{{ project_id }}"
        metadata:
          ssh-keys: "ubuntu:{{ ssh_public_key_lookup }}"
        network_interfaces: "{{ gce_nics }}"
#          - access_configs:
#            - name: "{{ if algo_separate_egress }}Ingress NAT{{ else }}External NAT{{ endif }}"
#              type: ONE_TO_ONE_NAT
#              nat_ip: "{{ address }}"
#          - access_configs:
#            - name: "Egress NAT"
#              type: ONE_TO_ONE_NAT
#              nat_ip: "{{ egress_address }}"
#            network: "{{ egress }}"
#            subnetwork: "{{ egress_subnet }}"
        tags:
          - "environment-algo"
      register: google_vm

    - set_fact:
        cloud_instance_ip: "{{ google_vm.instance_data[0].public_ip }}"
        ansible_ssh_user: ubuntu
  rescue:
    - debug: var=fail_hint
      tags: always
    - fail:
      tags: always
